

// [14 Aug 2018]  I've just discovered that serial predicates containing members of RU might combine differently
// than I thought.  I'm going to wait to figure that out before continuing here.  Meanwhile I'll work on other aspects
// of the program.  

// [19 Aug 2018, EM]  One useful test to have around would be the "is-subset" comparison: for two predicates, P and Q,
// with arity(Q) = q and arity(P) = p > q, plug in only q arguments into P, using "" for the rest.  See if the result
// equals the result when q arguments are plugged into Q.

// [19 Aug 2018]  Ooh, yikes.  "Sỉai" = `Nothing has property ___ (1)` and can produce 0-ary predicates.

// [20 Aug 2018]  I'm going to change the expected output to only put parens around "runs" of the same type of connector.
// So for example, "dua leo ru buaq ru kuai bai" parenthesizes as "dua (leo ru buaq ru kuai) bai" (outer-level parens are
// skipped).  "mu" also produces parens.  Non-trivial head-predicates should also have parens around them.


// Composition

dua mai			// Type (0) slot
leo pai			// Type (1) slot
poq kea			// Implicit "ru"
soq jia			// Filled slot is not at the end
soq jeo			// Filling word has multiple valid arities
tua jeaq jai		// Three-part composite
cheo jeo		// Filling word has multiple valid arities, and only one works
mia ti			// Type (2) slot
cua meo			// Two different abstraction slots
dui bu			// Two different abstraction slots, and filled by predicate with mutliple arities

// Ru

pai ru mai		// Simple ru
poq ra niai dua		// Ru over something else
jeo re pu ro jia	// Two ru's
dua jia ru pu   	// Tests that the ru subjuncts under the dua (which it should only do in my proposed parse)
dua pai ri mai		// Parses WAY differently under the two models

// Ru ?-types

fa ru soq		// Produce a ?-type
bu ra jeo		// Produces ?-types if arities of predicates differ
bu ra jeo de		// How should ?-types be treated during composition?

// Mu

mu dua			// Btw, how does "mu" act on predicates with <2 slots?
jia mu dua
jia ri mu dua
mu mai ri mu pai

// To ru

to ri mai to pai
kuai to re chuq to nuo
to ra jia de to pu fie

// Seen in the wild

dua leo ru buaq bai		// Used in "Sa Búai Hủohūa"
bu tea ru ceo riofa tishagiq	// Used by Ilmen

// Bug fix (jado-tag bug)

mia leo pai		// Fix for a bug where untagged jado broke the (max-jado-tag) function
mia pai			// Control

// Bug fix ("beo mu chua" bug)

beo mu chua		// Fix for a bug where this parses as "bẻo A chûa ja dó ja dó"
beo chua		// Control 1
beo mu mu chua		// Control 2