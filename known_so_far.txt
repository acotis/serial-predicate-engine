

The signature of "du" [Resolved]
--------------------------------

I define below that SPA are the only candidates for serial
expansion.  However, consider the word "du".  Naively, its
signature would be [(), (0), (c 1)] since its 2-ary definition
is "___ seems to exhibit property ___".  But it makes just as
much sense for propositions to satisfy properties as for objects
to do so, so it should really be [(), (0), (0 1)].

However, this means that its (0) definition can't be used during
expansion.  Will this be an issue?  I think so.  Consider the
sentence "Du? jai? sa poq/ da" and its two expansions:

  1.   (du 0) (jai c) <sa poq>
     = (du (jai c)) <sa poq>
     = (du (jai <sa poq>))

  2.   (du 0 1) (jai c) <sa poq>
     = (du 0 (jai jado)) <sa poq>
     = (du <sa poq> (jai jado))

It looks like <sa poq> is asserted to exist only in the second
of these expansions.

[Resolution]  Actually, there's a solution.  I don't think it
matters where <sa poq> ends up in the expansion of the predicate,
I think it is asserted to exist no matter what because it appears
in the top level of the ORIGINAL sentence. (Solpahi has confirmed
this.)

With this in mind, (du 0) and (du c 1) will compose identically
over ANY predicate, because (du c (P jado ...)) = (du (P c ...)).


Stopping-point arities
----------------------

From toaq.org, we have:

  "For some predicate words, the difference between different
   arities is very minor, as when lower arity versions simply
   lack later argument places of the higher arity versions"

Yet in *dua mai*, using the 1-ary definition of *dua* would yield
*dua ru mai* as the expansion, which certainly isn't useful.

So, define a "stopping point arity" as an arity of a word where
either (1) no more arguments can be added or (2) adding more
arguments changes the type of previous arguments.  So:

  . *jeo-1* [0] is a SPA, since *jeo-2* is [c 1].
  . *jeo-2* [c 1] is a SPA, since there is no *jeo-3*.
  . *dua-1* [c] is not, since *dua-2* is [c 0] = *dua-1* + [0]

During composition, only stopping-point arities are permissible
candidicates for predicate expansion.  So, jeo has both [0] and
[c 1], but dua has only [c 0].


Slots with type "c or 0"?  [Resolved]
--------------------------------------

Some slots seem to have type "c or 0".  For example, the
signature of "hui" seems like it must be [(c), (0)], since both
objects and propositions can be bad.  So, what does *hui mai*
expand to?  Is it *hui ru mai* or *hui (mai)*?

[Resolution:] This problem is a by-product of a bad type system.

The (0) type should be defined as "anything that doesn't have
slots" -- so, both propositions and objects can go into it, and
in serial predicates, it counts as an abstraction place.  The
one slot of "hui" has type (0).

Then, define the (c) type as "concrete object".  Propositions
could still grammatically go into it (since they are still terms)
but in serial predicates these places are skipped over.  The one
slot of e.g. "jai" would have type (c), since it doesn't make
sense for a proposition to be happy.